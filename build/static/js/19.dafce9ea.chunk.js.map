{"version":3,"sources":["views/Trabalhadores.js"],"names":["Trabalhadores","value","api","useApi","useState","loading","setLoading","list","setList","showModal","setShowModal","modalLoading","setModalLoading","modalTitleField","setModalTitleField","modalMatriculaField","setModalMatriculaField","modalNomeField","setModalNomeField","modalCPFField","setModalCPFField","modalAdmissaoField","setModalAdmissaoField","modalId","setModalId","fields","label","key","_style","width","toLocaleString","minimumFractionDigits","useEffect","getList","getTrabalhadores","result","error","handleCloseModal","handleRemoveButton","id","window","confirm","removeWall","alert","handleModalSave","data","title","matricula","nome","cpf","admissao","addWall","updateWall","color","onClick","name","items","noItemsViewSlot","hover","striped","bordered","border","clickableRows","captionSlot","pagination","itemsPerPage","scopedSlots","actions","item","index","findIndex","v","handleEditButton","show","onClose","closeButton","htmlFor","type","placeholder","onChange","e","target","disabled"],"mappings":"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","file":"static/js/19.dafce9ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CButton,\n  CCardBody,\n  CDataTable,\n  CButtonGroup,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CTextarea,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport useApi from \"../services/api\";\n\nexport default function Trabalhadores() {\n  const api = useApi();\n\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modalTitleField, setModalTitleField] = useState(\"\");\n  const [modalMatriculaField, setModalMatriculaField] = useState(\"\");\n  const [modalNomeField, setModalNomeField] = useState(\"\");\n  const [modalCPFField, setModalCPFField] = useState(\"\");\n  const [modalAdmissaoField, setModalAdmissaoField] = useState(\"\");\n  const [modalId, setModalId] = useState(\"\");\n  const formatCurrency = (value) =>  {\n//    return value.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})\n    return value.toLocaleString('pt-BR', { minimumFractionDigits: 2})\n  };\n\n  const fields = [\n    { label: \"Matrícula\", key: \"matricula\", _style: { width: \"80px\" } },\n    { label: \"Nome\", key: \"nome\", _style: { width: \"300px\" } },\n    { label: \"CPF\", key: \"cpf\", _style: { width: \"80px\" } },\n    { label: \"Categoria\", key: \"categoria\", _style: { width: \"80px\" } },\n    {\n      label: \"Admissão\",\n      key: \"admissao_data\",\n      _style: { width: \"80px\" }\n    },\n    {\n      label: \"Demissão\",\n      key: \"demissao\",\n      _style: { width: \"80px\" },\n    },\n    { label: \"Salário\", key: formatCurrency(\"salario_fixo\"), _style:{width: \"80px\"} },\n    { label: \"Ações\", key: \"actions\", _style:{width:\"1px\"}},\n  ];\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = async () => {\n    setLoading(true);\n    const result = await api.getTrabalhadores();\n    setLoading(false);\n    if (result.error === \"\") {\n      setList(result.list);\n    } else {\n      setList(result.error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleEditButton = (id) => {\n//  const handleEditButton = (matricula) => {\n    let index = list.findIndex(v=>v.id===id);\n    setModalId(list[index][\"id\"]);\n    setModalTitleField(list[index][\"title\"]);\n    setModalMatriculaField(list[index][\"matricula\"]);\n    setModalNomeField(list[index][\"nome\"]);\n    setModalCPFField(list[index][\"CPFField\"]); \n    setModalAdmissaoField(list[index][\"admissao\"]);\n    setShowModal(true);\n  };\n\n  const handleRemoveButton = async (id) => {\n    if (window.confirm(\"Confirma a exclusão?\")) {\n      const result = await api.removeWall(id);\n      if (result.error === \"\") {\n        getList();\n      } else {\n        alert(result.error);\n      }\n    }\n  };\n\n  const handleNewButton = () => {\n    setModalId(\"\");\n    setModalTitleField(\"\");\n\n    setModalMatriculaField(\"\"); \n    setModalNomeField(\"\");\n    setModalCPFField(\"\");\n    setModalAdmissaoField(\"\");\n    setShowModal(true);\n  };\n\n  const handleModalSave = async () => {\n    if (modalTitleField && modalNomeField) {\n      setModalLoading(true);\n      let result;\n      let data = {\n        title: modalTitleField,\n        matricula: modalMatriculaField,\n        nome: modalNomeField,\n        cpf: modalCPFField,\n        admissao: modalAdmissaoField,\n      };\n\n      if (modalId === \"\") {\n        result = await api.addWall(data);\n      } else {\n        result = await api.updateWall(modalId, data);\n      }\n\n      setModalLoading(false);\n      if (result.error === \"\") {\n        setShowModal(false);\n        getList();\n      } else {\n        alert(result.error);\n      }\n    } else {\n      alert(\"Preencha os campos!\");\n    }\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <h2>Cadastro de Trabalhadores</h2>\n          <CCard>\n            <CCardHeader>\n              <CButton color=\"primary\" onClick={handleNewButton}>\n                <CIcon name=\"cil-check\" />\n                Inclusão\n              </CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={list}\n                fields={fields}\n                loading={loading}\n                noItemsViewSlot=\" \"\n                hover\n                striped\n                bordered\n                border\n                clickableRows\n                captionSlot={5}\n                pagination\n                itemsPerPage={10}\n                scopedSlots={{\n                  actions: (item) => (\n                    <td>\n                      <CButtonGroup>\n                        <CButton\n                          color=\"info\"\n                          onClick={() => handleEditButton(item.id)}                          \n                        >\n                          Alterar\n                        </CButton>\n                        <CButton\n                          color=\"danger\"\n                          onClick={() => handleRemoveButton(item.id)}                          \n                        >\n                          Excluir\n                        </CButton>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CModal show={showModal} onClose={handleCloseModal}>\n        <CModalHeader closeButton>\n          {modalId === \"\" ? \"Novo\" : \"Alterar\"} Trabalhador\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-title\">Titulo do Aviso</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-title\"\n              placeholder=\"Digite um título para o aviso\"\n              value={modalTitleField}\n              onChange={(e) => setModalTitleField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-matricula\">Matrícula</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-matricula\"\n              placeholder=\"Digite a Matrícula do Trabalhador\"\n              value={modalMatriculaField}\n              onChange={(e) => setModalMatriculaField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-nome\">Nome do Trabalhador</CLabel>\n            <CTextarea\n              id=\"modal-nome\"\n              placeholder=\"Digite o nome do Trabalhador\"\n              value={modalNomeField}\n              onChange={(e) => setModalNomeField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-admissao\">Data de Admissão</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-admissao\"\n              value={modalAdmissaoField}\n              onChange={(e) => setModalAdmissaoField(e.target.value)}\n              disabled={modalLoading}\n              width={\"1px\"}\n            />\n          </CFormGroup>\n\n\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={handleModalSave}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Salvar\"}\n          </CButton>\n          <CButton\n            color=\"secondary\"\n            onClick={handleCloseModal}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Cancelar\"}\n          </CButton>\n          backdrop=\"static\"\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n}\n"],"sourceRoot":""}