{"version":3,"sources":["views/Lotacoes.js"],"names":["Lotacoes","api","useApi","useState","loading","setLoading","list","setList","showModal","setShowModal","modalLoading","setModalLoading","modalTitleField","setModalTitleField","modalIdField","setModalIdField","modalLotacaoField","setModalLotacaoField","modalDescricaoField","setModalDescricaoField","modalEnderecoField","setModalEnderecoField","modalCidadeField","setModalCidadeField","modalQtd_maxField","setModalQtd_maxField","modalId","setModalId","useEffect","getList","getLotacoes","result","error","handleCloseModal","handleRemoveButton","id","window","confirm","removeWall","alert","handleModalSave","data","title","lotacao","descricao","endereco","cidade","qtde_maxima_trabalhadores","addWall","updateWall","color","onClick","name","items","fields","label","key","_style","width","noItemsViewSlot","hover","striped","bordered","border","clickableRows","captionSlot","pagination","itemsPerPage","scopedSlots","actions","item","index","findIndex","v","handleEditButton","show","onClose","closeButton","htmlFor","type","placeholder","value","onChange","e","target","disabled"],"mappings":"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","file":"static/js/17.1a8acbcf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CButton,\n  CCardBody,\n  CDataTable,\n  CButtonGroup,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CTextarea,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport useApi from \"../services/api\";\n\nexport default function Lotacoes() {\n  const api = useApi();\n\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modalTitleField, setModalTitleField] = useState(\"\");\n  const [modalIdField, setModalIdField] = useState(\"\");\n  const [modalLotacaoField, setModalLotacaoField] = useState(\"\");\n  const [modalDescricaoField, setModalDescricaoField] = useState(\"\");\n  const [modalEnderecoField, setModalEnderecoField] = useState(\"\");\n  const [modalCidadeField, setModalCidadeField] = useState(\"\");\n  const [modalQtd_maxField, setModalQtd_maxField] = useState(\"\");\n  const [modalId, setModalId] = useState(\"\");\n  const formatCurrency = (value) =>  {\n//    return value.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})\n    return value.toLocaleString('pt-BR', { minimumFractionDigits: 2})\n  };\n\n  const fields = [\n    { label: \"ID\", key: \"id\", _style: { width: \"80px\" } },\n    { label: \"Lotacao\", key: \"lotacao\", _style: { width: \"80px\" } },\n    { label: \"Descricao\", key: \"descricao\", _style: { width: \"300px\" } },\n    { label: \"Endereço\", key: \"endereço\", _style: { width: \"80px\" } },\n    { label: \"Cidade\", key: \"cidade\",_style: { width: \"80px\" } },\n    { label: \"Qtd_max\", key: \"qtde_maxima_trabalhadores\", _style: { width: \"80px\" } },\n    { label: \"Ações\", key: \"actions\", _style:{width:\"1px\"}},\n  ];\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = async () => {\n    setLoading(true);\n    const result = await api.getLotacoes();\n    setLoading(false);\n    if (result.error === \"\") {\n      setList(result.list);\n    } else {\n      setList(result.error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleEditButton = (id) => {\n    let index = list.findIndex(v=>v.id===id);\n    setModalId(list[index][\"id\"]);\n    setModalTitleField(list[index][\"title\"]);\n    setModalIdField(list[index][\"id\"]);\n    setModalLotacaoField(list[index][\"lotacao\"]);\n    setModalDescricaoField(list[index][\"descricao\"]);\n    setModalEnderecoField(list[index][\"enderecoField\"]); \n    setModalCidadeField(list[index][\"cidade\"]);\n    setModalQtd_maxField(list[index][\"qtde_maxima_trabalhadores\"]);\n    setShowModal(true);\n  };\n\n  const handleRemoveButton = async (id) => {\n    if (window.confirm(\"Confirma a exclusão?\")) {\n      const result = await api.removeWall(id);\n      if (result.error === \"\") {\n        getList();\n      } else {\n        alert(result.error);\n      }\n    }\n  };\n\n  const handleNewButton = () => {\n    setModalId(\"\");\n    setModalTitleField(\"\");\n\n    setModalIdField(\"\");\n    setModalLotacaoField(\"\"); \n    setModalDescricaoField(\"\");\n    setModalEnderecoField(\"\");\n    setModalCidadeField(\"\");\n    setModalQtd_maxField(\"\");\n    setShowModal(true);\n  };\n\n  const handleModalSave = async () => {\n    if (modalTitleField && modalDescricaoField) {\n      setModalLoading(true);\n      let result;\n      let data = {\n        title: modalTitleField,\n        id: modalIdField,\n        lotacao: modalLotacaoField,\n        descricao: modalDescricaoField,\n        endereco: modalEnderecoField,\n        cidade: modalCidadeField,\n        qtde_maxima_trabalhadores: modalQtd_maxField,\n      };\n\n      if (modalId === \"\") {\n        result = await api.addWall(data);\n      } else {\n        result = await api.updateWall(modalId, data);\n      }\n\n      setModalLoading(false);\n      if (result.error === \"\") {\n        setShowModal(false);\n        getList();\n      } else {\n        alert(result.error);\n      }\n    } else {\n      alert(\"Preencha os campos!\");\n    }\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <h2>Cadastro de Lotações</h2>\n          <CCard>\n            <CCardHeader>\n              <CButton color=\"primary\" onClick={handleNewButton}>\n                <CIcon name=\"cil-check\" />\n                Inclusão\n              </CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={list}\n                fields={fields}\n                loading={loading}\n                noItemsViewSlot=\" \"\n                hover\n                striped\n                bordered\n                border\n                clickableRows\n                captionSlot={5}\n                pagination\n                itemsPerPage={10}\n                scopedSlots={{\n                  actions: (item) => (\n                    <td>\n                      <CButtonGroup>\n                        <CButton\n                          color=\"info\"\n                          onClick={() => handleEditButton(item.id)}                          \n                        >\n                          Alterar\n                        </CButton>\n                        <CButton\n                          color=\"danger\"\n                          onClick={() => handleRemoveButton(item.id)}                          \n                        >\n                          Excluir\n                        </CButton>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CModal show={showModal} onClose={handleCloseModal}>\n        <CModalHeader closeButton>\n          {modalId === \"\" ? \"Novo\" : \"Alterar\"} Lotação\n        </CModalHeader>\n        <CModalBody>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-title\">Titulo da Lotação</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-title\"\n              placeholder=\"Digite a Descrição da Lotação\"\n              value={modalTitleField}\n              onChange={(e) => setModalTitleField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-id\">ID</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-id\"\n              placeholder=\"Digite o ID da Lotação\"\n              value={modalIdField}\n              onChange={(e) => setModalIdField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-lotacao\">Lotação</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-lotacao\"\n              placeholder=\"Digite a Lotação\"\n              value={modalLotacaoField}\n              onChange={(e) => setModalLotacaoField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-descricao\">Descrição da Lotação</CLabel>\n            <CTextarea\n              id=\"modal-lotacao\"\n              placeholder=\"Digite a Descrição da Lotação\"\n              value={modalDescricaoField}\n              onChange={(e) => setModalDescricaoField(e.target.value)}\n              disabled={modalLoading}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-endereco\">Endereço</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-endereco\"\n              value={modalEnderecoField}\n              onChange={(e) => setModalEnderecoField(e.target.value)}\n              disabled={modalLoading}\n              width={\"1px\"}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-cidade\">Cidade</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-cidade\"\n              value={modalCidadeField}\n              onChange={(e) => setModalCidadeField(e.target.value)}\n              disabled={modalLoading}\n              width={\"1px\"}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-qtd_max\">Qtd. Max</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-qtd_max\"\n              value={modalQtd_maxField}\n              onChange={(e) => setModalQtd_maxField(e.target.value)}\n              disabled={modalLoading}\n              width={\"1px\"}\n            />\n          </CFormGroup>\n\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={handleModalSave}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Salvar\"}\n          </CButton>\n          <CButton\n            color=\"secondary\"\n            onClick={handleCloseModal}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Cancelar\"}\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n}\n"],"sourceRoot":""}