{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/CommonAreas.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Wall","api","useApi","useState","loading","setLoading","list","setList","showModal","setShowModal","modalLoading","setModalLoading","modalId","setModalId","modalAllowedField","setModalAllowedField","modalTitleField","setModalTitleField","modalCoverField","setModalCoverField","modalDaysField","setModalDaysField","modalStartTimeField","setModalStartTimeField","modalEndTimeField","setModalEndTimeField","useEffect","getList","getAreas","result","error","handleCloseModal","handleRemoveButton","id","window","confirm","removeArea","alert","handleModalSave","data","allowed","title","days","join","start_time","end_time","cover","addArea","updateArea","handleSwitchClick","item","updateAreaAllowed","toggleModalDays","event","target","checked","filter","day","push","color","onClick","name","items","fields","label","key","sorter","_style","width","noItemsViewSlot","columnFilter","hover","striped","bordered","pagination","itemsPerPage","scopedSlots","onChange","src","alt","daysWords","split","dayString","i","actions","index","findIndex","v","handleEditButton","show","onClose","closeButton","htmlFor","type","value","e","placeholder","files","style","marginLeft","includes","disabled"],"mappings":"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","file":"static/js/10.f89ecd5d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CButton,\n  CCardBody,\n  CDataTable,\n  CButtonGroup,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CSwitch,\n  CInputCheckbox,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport useApi from \"../services/api\";\n\nexport default function Wall() {\n  const api = useApi();\n\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modalId, setModalId] = useState(\"\");\n\n  const [modalAllowedField, setModalAllowedField] = useState(1);\n  const [modalTitleField, setModalTitleField] = useState(\"\");\n  const [modalCoverField, setModalCoverField] = useState(\"\");\n  const [modalDaysField, setModalDaysField] = useState([]);\n  const [modalStartTimeField, setModalStartTimeField] = useState(\"\");\n  const [modalEndTimeField, setModalEndTimeField] = useState(\"\");\n\n  const fields = [\n    { label: \"Ativo\", key: \"allowed\", filter: false,sorter: false },\n    { label: \"Capa\", key: \"cover\", filter: false,sorter: false },\n    { label: \"Título\", key: \"title\" },\n    { label: \"Dias de funcionamento\", key: \"days\" },\n    { label: \"Horário de início\", key: \"start_time\",filter: false },\n    { label: \"Horário de fim\", key: \"end_time\" ,filter: false},\n    {\n      label: \"Ações\",\n      key: \"actions\",\n      _style: { width: \"1px\" },\n      sorter: false,\n      filter: false,\n    },\n  ];\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = async () => {\n    setLoading(true);\n    const result = await api.getAreas();\n    setLoading(false);\n    if (result.error === \"\") {\n      setList(result.list);\n    } else {\n      setList(result.error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleEditButton = (id) => {\n    let index = list.findIndex((v) => v.id === id);\n\n    setModalId(list[index][\"id\"]);\n    setModalAllowedField(list[index][\"allowed\"]);\n    setModalTitleField(list[index][\"title\"]);\n    setModalCoverField(\"\");\n    setModalDaysField(list[index][\"days\".split(\",\")]);\n    setModalStartTimeField(list[index][\"start_time\"]);\n    setModalEndTimeField(list[index][\"end_time\"]);\n\n    setShowModal(true);\n  };\n\n  const handleRemoveButton = async (id) => {\n    if (window.confirm(\"Tem certeza que deseja excluir?\")) {\n      const result = await api.removeArea(id);\n      if (result.error === \"\") {\n        getList();\n      } else {\n        alert(result.error);\n      }\n    }\n  };\n\n  const handleNewButton = () => {\n    setModalId(\"\");\n    setModalAllowedField(1);\n    setModalTitleField(\"\");\n    setModalCoverField(\"\");\n    setModalDaysField([]);\n    setModalStartTimeField(\"\");\n    setModalEndTimeField(\"\");\n    setShowModal(true);\n  };\n\n  const handleModalSave = async () => {\n    if (modalTitleField && modalStartTimeField && modalEndTimeField) {\n      setModalLoading(true);\n      let result;\n      let data = {\n        allowed: modalAllowedField,\n        title: modalTitleField,\n        days: modalDaysField.join(\",\"),\n        start_time: modalStartTimeField,\n        end_time: modalEndTimeField,\n      };\n\n      if(modalCoverField) {\n        data.cover = modalCoverField\n      } \n\n      if (modalId === \"\") {\n        result = await api.addArea(data);\n      } else {\n        result = await api.updateArea(modalId, data);\n      }\n\n      setModalLoading(false);\n      if (result.error === \"\") {\n        setShowModal(false);\n        getList();\n      } else {\n        alert(result.error);\n      }\n    } else {\n      alert(\"Preencha os campos!\");\n    }\n  };\n\n  const handleSwitchClick = async (item) => {\n    setLoading(true)\n    const result = await api.updateAreaAllowed(item.id)\n    setLoading(false)\n    if(result.error === \"\") {\n      getList()\n    } else {\n      alert(result.error)\n    }\n  };\n\n  const handleModalSwitchClick = () => {\n    setModalAllowedField(1 - modalAllowedField);\n  };\n\n  const toggleModalDays = (item, event) => {\n    let days = [...modalDaysField];\n    if (event.target.checked === false) {\n      days = days.filter((day) => day !== item);\n    } else {\n      days.push(item);\n    }\n    setModalDaysField(days);\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <h2>Áreas Comuns</h2>\n          <CCard>\n            <CCardHeader>\n              <CButton color=\"primary\" onClick={handleNewButton}>\n                <CIcon name=\"cil-check\" />\n                Nova Área Comum\n              </CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={list}\n                fields={fields}\n                loading={loading}\n                noItemsViewSlot=\" \"\n                columnFilter\n                sorter\n                hover\n                striped\n                bordered\n                pagination\n                itemsPerPage={10}\n                scopedSlots={{\n                  allowed: (item) => (\n                    <td>\n                      <CSwitch\n                        color=\"success\"\n                        checked={item.allowed}\n                        onChange={() => handleSwitchClick(item)}\n                      />\n                    </td>\n                  ),\n                  cover: (item) => (\n                    <td>\n                      <img src={item.cover} width={100} alt=\"item cover\" />\n                    </td>\n                  ),\n                  days: (item) => {\n                    let daysWords = [\n                      \"Segunda\",\n                      \"Terça\",\n                      \"Quarta\",\n                      \"Quinta\",\n                      \"Sexta\",\n                      \"Sábado\",\n                      \"Domingo\",\n                    ];\n                    let days = item.days.split(\",\");\n                    let dayString = [];\n                    for (let i in days) {\n                      if (days[i] && daysWords[days[i]]) {\n                        dayString.push(daysWords[days[i]]);\n                      }\n                    }\n                    return <td>{dayString.join(\", \")}</td>;\n                  },\n                  actions: (item) => (\n                    <td>\n                      <CButtonGroup>\n                        <CButton\n                          color=\"info\"\n                          onClick={() => handleEditButton(item.id)}\n                        >\n                          Editar\n                        </CButton>\n                        <CButton\n                          color=\"danger\"\n                          onClick={() => handleRemoveButton(item.id)}\n                        >\n                          Excluir\n                        </CButton>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CModal show={showModal} onClose={handleCloseModal}>\n        <CModalHeader closeButton>\n          {modalId === \"\" ? \"Nova\" : \"Editar\"} Área Comum\n        </CModalHeader>\n\n        <CModalBody>\n          <CFormGroup>\n            <CLabel htmlFor=\"modal_allowed\">Ativo</CLabel>\n            <br />\n            <CSwitch\n              color=\"success\"\n              checked={modalAllowedField}\n              onChange={handleModalSwitchClick}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-title\">Título</CLabel>\n            <CInput\n              type=\"text\"\n              id=\"modal-title\"\n              name=\"title\"\n              value={modalTitleField}\n              onChange={(e) => setModalTitleField(e.target.value)}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-cover\">Capa</CLabel>\n            <CInput\n              type=\"file\"\n              id=\"modal-cover\"\n              name=\"cover\"\n              placeholder=\"Escolha uma imagem\"\n              onChange={(e) => setModalCoverField(e.target.files[0])}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-days\">Dias de funcionamento</CLabel>\n            <div style={{ marginLeft: 20 }}>\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-0\"\n                  name=\"modal-days\"\n                  value={0}\n                  checked={modalDaysField.includes(\"0\")}\n                  onChange={(e) => toggleModalDays(\"0\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-0\">Segunda-Feira</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-1\"\n                  name=\"modal-days\"\n                  value={1}\n                  checked={modalDaysField.includes(\"1\")}\n                  onChange={(e) => toggleModalDays(\"1\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-1\">Terça-Feira</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-2\"\n                  name=\"modal-days\"\n                  value={2}\n                  checked={modalDaysField.includes(\"2\")}\n                  onChange={(e) => toggleModalDays(\"2\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-2\">Quarta-Feira</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-3\"\n                  name=\"modal-days\"\n                  value={3}\n                  e\n                  checked={modalDaysField.includes(\"3\")}\n                  onChange={(e) => toggleModalDays(\"3\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-3\">Quinta-Feira</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-4\"\n                  name=\"modal-days\"\n                  value={4}\n                  checked={modalDaysField.includes(\"4\")}\n                  onChange={(e) => toggleModalDays(\"4\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-4\">Sexta-Feira</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-5\"\n                  name=\"modal-days\"\n                  value={5}\n                  checked={modalDaysField.includes(\"5\")}\n                  onChange={(e) => toggleModalDays(\"5\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-5\">Sábado</CLabel>\n              </div>\n\n              <div>\n                <CInputCheckbox\n                  id=\"modal-days-6\"\n                  name=\"modal-days\"\n                  value={6}\n                  checked={modalDaysField.includes(\"6\")}\n                  onChange={(e) => toggleModalDays(\"6\", e)}\n                />\n                <CLabel htmlFor=\"modal-days-6\">Domingo</CLabel>\n              </div>\n            </div>\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-start-time\">Horário de início</CLabel>\n            <CInput\n              type=\"time\"\n              id=\"modal-start-time\"\n              name=\"start_time\"\n              value={modalStartTimeField}\n              onChange={(e) => setModalStartTimeField(e.target.value)}\n            />\n          </CFormGroup>\n\n          <CFormGroup>\n            <CLabel htmlFor=\"modal-end-time\">Horário de fim</CLabel>\n            <CInput\n              type=\"time\"\n              id=\"modal-end-time\"\n              name=\"end\"\n              value={modalEndTimeField}\n              onChange={(e) => setModalEndTimeField(e.target.value)}\n            />\n          </CFormGroup>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"primary\"\n            onClick={handleModalSave}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Salvar\"}\n          </CButton>\n          <CButton\n            color=\"secondary\"\n            onClick={handleCloseModal}\n            disabled={modalLoading}\n          >\n            {modalLoading ? \"Carregando...\" : \"Cancelar\"}\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n}\n"],"sourceRoot":""}